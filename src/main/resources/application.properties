spring.application.name=vehicleAduit
server.port=8080

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=vehicle-audit-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


rag.base-url=http://localhost:8000
rag.connect-timeout-ms=2000
rag.read-timeout-ms=5000

# File Upload Configuration
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# AWS S3 Configuration
aws.accessKeyId=${AWS_ACCESS_KEY_ID:your-access-key-id}
aws.secretKey=${AWS_SECRET_ACCESS_KEY:your-secret-access-key}
aws.region=ap-southeast-2
aws.s3.bucket=aivle-5
# === RAG/LLM settings (in-app) ===
openai.api-key=
openai.base-url=https://api.openai.com/v1
openai.chat-model=gpt-4o-mini
openai.embed-model=text-embedding-3-large